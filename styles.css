body,
html {
  height: 100%;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  background: linear-gradient(blue, black);
}

#img {
  transition: transform 0.2s ease; /* Плавное увеличение и уменьшение */
}

.clicked {
  transform: scale(1.05); /* Увеличивает изображение на 5% */
}

.click-effect {
  transform: scale(0.95); /* Уменьшает изображение для эффекта клика */
  transition: transform 0.05s ease; /* Более быстрая анимация для эффекта клика */
}

.navigation {
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-bottom: 10px; /* Отступ от нижней границы */
}

button {
  flex-grow: 1; /* Растягивает кнопки, чтобы они занимали все доступное пространство */
  padding: 9px 18px;
  margin: 0 5px; /* Отступы между кнопками */
  font-size: 18px;
  color: black;
  background-color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s;
}

/* Первая и последняя кнопка без отступов с боков */
.navigation button:first-child {
  margin-left: 0;
}

.navigation button:last-child {
  margin-right: 0;
}

button:hover {
  background-color: #0056b3;
  color: white;
}

.sticker-container {
  flex-grow: 1;
  display: flex;
  flex-direction: column; /* Добавляемое свойство для упорядочивания дочерних элементов в колонку */
  justify-content: center;
  align-items: center;
}

.count {
  color: white;
  font-size: 22px;
  /* Удалите свойство flex-grow, так как оно не нужно для внутреннего div */
  /* Добавьте другие стили, если нужно, для позиционирования или отступов */
}

.progressBar {
  margin-bottom: 10px;
  width: 96%;
  margin-left: 2%;
  height: 1%; /* Высота внешней полосы */
  background-color: #ddd; /* Цвет фона внешней полосы */
  border-radius: 10px; /* Скругление углов внешней полосы */
  overflow: hidden; /* Обрезать внутреннюю полосу, если она выходит за пределы */
}

.progressBarFill {
  height: 100%; /* Высота внутренней полосы должна соответствовать внешней */
  width: 0%; /* Начальная ширина внутренней полосы, изменяется динамически */
  background: linear-gradient(
    to right,
    red,
    yellow,
    green
  ); /* Градиент для внутренней полосы */
  border-radius: 10px; /* Скругление углов внутренней полосы */
  transition: width 0.5s ease-in-out; /* Плавное изменение ширины внутренней полосы */
}

.value {
  display: flex; /* Используем flexbox для расположения дочерних элементов */
  justify-content: space-between; /* Располагаем дочерние элементы на противоположных сторонах */
  color: white;
  font-size: 22px; /* Устанавливаем размер шрифта для обоих заголовков */
  width: 100%; /* Занимаем всю доступную ширину родителя */
}

.value h1,
.value h2 {
  margin-bottom: 5px; /* Убираем стандартные отступы у заголовков */
  font-size: inherit; /* Наследуем размер шрифта от .value */
  margin-left: 2%;
  margin-right: 2%;
}

@keyframes flyAndFade {
    0% {
      opacity: 1;
      transform: translate(0, 0);
    }
    100% {
      opacity: 0;
      transform: translate(0, -50px); /* Элемент улетает вверх на 50px и становится прозрачным */
    }
  }
  
  .token-change {
    position: absolute;
    color: white; /* Или любой другой цвет */
    font-size: 16px; /* Размер шрифта */
    animation: flyAndFade 0.3s ease-in-out forwards; /* Анимация с указанием, что конечные стили должны сохраняться */
  }
  
